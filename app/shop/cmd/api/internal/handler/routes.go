// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	order "looklook/app/shop/cmd/api/internal/handler/order"
	product "looklook/app/shop/cmd/api/internal/handler/product"
	user "looklook/app/shop/cmd/api/internal/handler/user"
	"looklook/app/shop/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/user",
				Handler: user.GetUserListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/user/:id",
				Handler: user.GetUserInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user",
				Handler: user.CreateUserHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/user",
				Handler: user.UpdateUserHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/user",
				Handler: user.DeleteUserHandler(serverCtx),
			},
		},
		rest.WithPrefix("/shop/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/order",
				Handler: order.GetOrderListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/order/:id",
				Handler: order.GetOrderInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/order",
				Handler: order.CreateOrderHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/order",
				Handler: order.UpdateOrderHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/order",
				Handler: order.DeleteOrderHandler(serverCtx),
			},
		},
		rest.WithPrefix("/shop/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/product-check",
				Handler: product.CheckProductHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/product",
				Handler: product.GetProductListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/product/:id",
				Handler: product.GetProductInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/product",
				Handler: product.CreateProductHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/product",
				Handler: product.UpdateProductHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/product",
				Handler: product.DeleteProductHandler(serverCtx),
			},
		},
		rest.WithPrefix("/shop/v1"),
	)
}
